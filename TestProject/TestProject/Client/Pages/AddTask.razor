@page "/tasks/add"
@page "/tasks/edit/{id:int}"
@using TestProject.Shared.Entitys
@inject HttpClient Http
@inject NavigationManager NavigationManager
<hr />
<EditForm Model="@task" OnValidSubmit="SaveUser">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Name</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="task.name" />
        </div>
        <ValidationMessage For="@(() => task.name)" />
    </div>
    <div class="mb-3">
        <label for="Description" class="form-label">Description</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="task.description" />
        </div>
        <ValidationMessage For="@(() => task.description)" />
    </div>
    <div class="mb-3">
        <label for="Status" class="form-label">Status</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="st_id" />
        </div>
        <ValidationMessage For="@(() => task.status_id)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
    [Parameter]
    public int id { get; set; }
    protected string Title = "Add";
    protected Task_ task = new();
    public string st_id { get; set; }
    protected override async Task OnParametersSetAsync()
    {
        if (id != 0)
        {
            Title = "Edit";
            st_id = task.status_id.ToString();
            task = await Http.GetFromJsonAsync<Task_>("api/Task/" + id);
        }
    }
    protected async Task SaveUser()
    {
        if (task.id != 0)
        {
            task.id = int.Parse(st_id);
            await Http.PutAsJsonAsync("api/Task", task);
        }
        else
        {
            task.id = int.Parse(st_id);
            await Http.PostAsJsonAsync("api/Task", task);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/tasks");
    }
}